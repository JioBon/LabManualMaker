# Generated by Django 4.1.2 on 2022-12-04 16:15

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseInstructor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('course_code', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('course_title', models.CharField(max_length=255)),
                ('department', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Lab_Manual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lab_name', models.CharField(max_length=255)),
                ('activity_name', models.CharField(max_length=255)),
                ('activity_no', models.FloatField()),
                ('objectives', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('ilo', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('discussion', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('resources', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('procedure', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('results', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('supplementary', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('observation', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('conclusion', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Courseinformation', to='home.courseinstructor')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='LabInstructor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sharing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LabManual', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='LabInformation', to='home.lab_manual')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SharedTo', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='courseinstructor',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='CourseInformation', to='home.courses'),
        ),
        migrations.AddField(
            model_name='courseinstructor',
            name='instructor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='CourseInstructor', to=settings.AUTH_USER_MODEL),
        ),
    ]
